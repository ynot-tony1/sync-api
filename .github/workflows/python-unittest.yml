name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-22.04 

    strategy:
      matrix:
        python-version: [3.7]

    steps:
    # Checkout repository
    - name: Checkout repo
      uses: actions/checkout@v3

    # Set up Python
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    # Install system dependencies
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg libsm6 libxext6 libxrender-dev

    # Install Python dependencies
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r syncnet_python/requirements.txt

    # Make download_model.sh executable
    - name: Make download_model.sh executable
      run: |
        chmod +x ./download_model.sh

    # Run download_model.sh script
    - name: Run download_model.sh
      run: |
        echo "Starting download_model.sh"
        ./download_model.sh
        echo "Completed download_model.sh"

    # List downloaded models for verification
    - name: Verify model files
      run: |
        ls -la syncnet_python/data/

    # Run unit tests
    - name: Run unit tests
      run: |
        echo "Starting unit tests"
        python3.7 -m unittest discover -s syncnet_python/tests/test_utils -p "*.py" -v
        python3.7 -m unittest discover -s syncnet_python/tests -p "*.py" -v
        echo "Completed unit tests"

    # Upload logs on failure
    - name: Upload Logs on Failure
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: syncnet-logs
        path: |
          api/logs/logs/app.log

